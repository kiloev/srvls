kind: pipeline
name: default

steps:
  - name: publish
    image: lambci/lambda:build-python3.7
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      MAILGUN_USER:
        from_secret: MAILGUN_USER
      MAILGUN_PASSWORD:
        from_secret: MAILGUN_PASSWORD
      CERTIFICATE_ARN:
        from_secret: CERTIFICATE_ARN
      AWS_REGION: ap-southeast-1
      HOST_NAME: kputrajaya.com
      PROJECT_NAME: srvls
      DEPLOY_STAGE: dev
      SLS_DEBUG: '*'
    volumes:
      - name: npm
        path: /drone/src/node_modules
      - name: pip
        path: /.pip
    commands:
      - export BUCKET_NAME=$PROJECT_NAME-$DEPLOY_STAGE
      - export CDN_DOMAIN=cdn-$PROJECT_NAME.$HOST_NAME
      - apk add --update gcc jpeg-dev musl-dev nodejs-npm zlib-dev
      - pip install --cache-dir=/.pip -r requirements.txt flake8 flake8-import-order
      - flake8
      - python manage.py test apps
      - cp /lib/ld-musl-x86_64.so.1 /lib/libc.musl-x86_64.so.1 /lib/libz.so.1 /usr/lib/libjpeg.so.8 /usr/lib/libturbojpeg.so.0 .
      - npm install
      # - $(npm bin)/serverless deploy -s $DEPLOY_STAGE
      - $(npm bin)/serverless deploy function -f app -s $DEPLOY_STAGE
      - python manage.py collectstatic --noinput --settings=srvls.settings.production

volumes:
  - name: npm
    host:
      path: /drone/npm
  - name: pip
    host:
      path: /drone/pip

when:
  event:
    - push
  branch:
    - master
